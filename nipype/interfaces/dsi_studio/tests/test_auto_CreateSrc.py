# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from __future__ import unicode_literals
from ..dsi_studio import CreateSrc


def test_CreateSrc_inputs():
    input_map = dict(
        args=dict(argstr='%s', ),
        environ=dict(
            nohash=True,
            usedefault=True,
        ),
        grad_dev=dict(
            argstr='#%s',
            copyfile=True,
            position=-1,
        ),
        ignore_exception=dict(
            deprecated='1.0.0',
            nohash=True,
            usedefault=True,
        ),
        input_b_table_file=dict(argstr='--b_table=%s', ),
        input_bvals_file=dict(argstr='--bval=%s', ),
        input_bvecs_file=dict(argstr='--bvec=%s', ),
        input_dicom_dir=dict(argstr='--source=%s', ),
        input_nifti_file=dict(
            argstr='--source=%s',
            copyfile=False,
        ),
        output_src=dict(
            argstr='--output=%s',
            genfile=True,
            name_source='subject_id',
            name_template='%s.src.gz',
        ),
        recursive=dict(argstr='--recursive=1', ),
        subject_id=dict(usedefault=True, ),
        terminal_output=dict(
            deprecated='1.0.0',
            nohash=True,
        ),
        test_trait=dict(),
    )
    inputs = CreateSrc.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value
def test_CreateSrc_outputs():
    output_map = dict(
        output_src=dict(
            argstr='--output=%s',
            name_source='subject_id',
            name_template='%s.src.gz',
        ), )
    outputs = CreateSrc.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value
